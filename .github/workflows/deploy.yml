name: Build and Deploy Admin

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: ap-southeast-1
  ECR_REPOSITORY: trendemy/webpage-admin
  EC2_HOST: "47.130.114.34"

permissions:
  contents: read

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Create env file
      run: |
        echo "VITE_API_KEY=${{ secrets.VITE_API_KEY }}" >> .env
        echo "VITE_AUTH_DOMAIN=${{ vars.VITE_AUTH_DOMAIN }}" >> .env
        echo "VITE_PROJECT_ID=${{ vars.VITE_PROJECT_ID }}" >> .env
        echo "VITE_STORAGE_BUCKET=${{ vars.VITE_STORAGE_BUCKET }}" >> .env
        echo "VITE_MESSAGING_SENDER_ID=${{ vars.VITE_MESSAGING_SENDER_ID }}" >> .env
        echo "VITE_APP_ID=${{ vars.VITE_APP_ID }}" >> .env
        echo "VITE_MEASUREMENT_ID=${{ vars.VITE_MEASUREMENT_ID }}" >> .env
        echo "VITE_CLOUDINARY_URL=${{ vars.VITE_CLOUDINARY_URL }}" >> .env
        echo "VITE_CLOUDINARY_NAME=${{ vars.VITE_CLOUDINARY_NAME }}" >> .env
        echo "VITE_CLOUDINARY_UPLOAD_PRESET=${{ vars.VITE_CLOUDINARY_UPLOAD_PRESET }}" >> .env
        echo "VITE_APP_ENV=production" >> .env
        cat .env

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
        VITE_API_URL: ${{ secrets.VITE_API_URL }}
        # Add other environment variables here
      run: |
        docker build --target production \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}
          docker pull ${{ steps.build-image.outputs.image }}
          docker stop trendemy-admin || true
          docker rm trendemy-admin || true
          docker run -d \
            --name trendemy-admin \
            -p 3000:80 \
            -e VITE_API_URL=${{ secrets.VITE_API_URL }} \
            ${{ steps.build-image.outputs.image }}
          docker system prune -f
